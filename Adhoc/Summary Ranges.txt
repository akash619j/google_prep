/*

Given a sorted integer array without duplicates, return the summary of its ranges.
For example, given [0,1,2,4,5,7], return ["0->2","4->5","7"].

*/

string ToString(int number) {
        
        int f=0;
        if(number<0)
            f=1;
        if(number==-2147483648)
        {
            string str="-2147483648";
            return str;
        }
        
        long long num=abs(number);
        string str="";
        vector<int>s;
        if(num==0)
            s.push_back(0);
        
        while(num>0)
        {
            s.push_back(num%10);
            num/=10;
        }
        if(f==1)
            str+="-";
        
        for(int i=s.size()-1;i>=0;i--)
            str+=s[i]+48;
        
        return str;
}

vector<string> summaryRanges(vector<int>& nums) {
        
	vector<string>ans;
        int n=nums.size();
        if(n==0)
            return ans;
        
        string str="";
        int start=0,end=0;
        for(int i=1;i<n;i++)
        {
            if(nums[i]==(nums[i-1]+1))
                end=i;
            else
            {
                if(start==end)
                    str+=ToString(nums[start]);
                else
                {
                    str+=ToString(nums[start]);
                    str+="->";
                    str+=ToString(nums[end]);
                }
                ans.push_back(str);
                
                str="";
                start=i;
                end=i;
            }
        }
        if(start==end)
            str+=ToString(nums[start]);
        else
        {
            str+=ToString(nums[start]);
            str+="->";
            str+=ToString(nums[end]);
        }
        ans.push_back(str);
        return ans;
}

Time Complexity: O(n)
Auxillary Space: O(1)

