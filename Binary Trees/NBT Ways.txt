//given a n-ary tree. find the number of different ways one can traverse it.

/*

As we can see the number of different ways would be 
simply the product of factorials of the number of
children of each node

*/

int numberWays(node* root) {

	int ways=1;
	
	if(root==NULL)
		return 0;
	
	queue<node*>q;
	q.push(root);
	while(!q.empty())
	{
		node* curr=q.front();
		q.pop();
		
		ways=ways*(factorial(curr->child.size()));
	
		for(int i=0;i<curr->child.size();i++)
			q.push(curr->child[i]);
	}
	return ways;
}

Time Complexity: O(n)