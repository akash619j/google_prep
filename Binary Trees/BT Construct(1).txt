//construct a bt from the preorder and inorder traversals


Code:

int search(int in[], int low, int high, int val)
{
	for(int i=low;i<=high;i++)
	{
		if(in[i]==val)
			return i;
	}
	return -1;
}
		
node* bt(int in[], int pre[], int low, int high)
{
	static int preIndex = 0;
	if(low>high)
		return NULL;

	node* root = newNode(pre[preIndex++]);
	if(low==high)
		return root;
	
	int ind = search(in,low,high,root->key);
	root->left = bt(in,pre,low,ind-1);
	root->right = bt(in,pre,ind+1,high);
	
	return root;
}
Time Complexity: O(n^2)	