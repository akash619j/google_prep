//perform the bottom to top level order traversal of a bt

vector<vector<int>> levelOrderBottom(TreeNode* root) {
        
        vector<vector<int> >answer;
        vector<int>ans;
        if(root==NULL)
            return answer;
        
        queue<pair<TreeNode* ,int> >q;
        q.push(make_pair(root,1));
        int preLevel=1;
        while(!q.empty())
        {
            TreeNode* curr= q.front().first;
            int level=q.front().second;
            q.pop();
            if(preLevel!=level)
            {
                answer.push_back(ans);
                ans.clear();
            }
            preLevel=level;
            ans.push_back(curr->val);
            if(curr->left)
                q.push(make_pair(curr->left,level+1));
            if(curr->right)
                q.push(make_pair(curr->right,level+1));
        }
        if(ans.size()>0)
            answer.push_back(ans);
        reverse(answer.begin(),answer.end());
        return answer;        
}